package config;

import java.io.IOException;
import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;

public class Config {
	public 	String DR,ext,excelname;
	public double markth= 200,quth=240;
	public boolean 	Debug = true,
					extra = true,
					appendlog = true;
	public int[][] layout;
	public int firstmark,
		secondmark,
		thirdmark,
		qrcode,
		x0,y0,x1,y1,q1,q2,q3,q4,q5,q6,q7,q8,q9,q10,
		q11,q12,q13,q14,q15,q16,q17,q18,q19,q20,
		A,B,C,D,E,F;
	public int[][][] ans = {
			{{2,15,4,17},{4,15,(8-2),(18-1)},{6,(16-1),(10-2),(18-1)},{(10-2),(16-1),(12-2),(18-1)},{(12-2),(16-1),(14-2),(18-1)},{(14-2),(16-1),(16-2),(18-1)}},
			{{2,17,4,19},{(6-2),(18-1),(8-2),(20-1)},{(8-2),(18-1),(10-2),(20-1)},{(10-2),(18-1),(12-2),(20-1)},{(12-2),(18-1),(14-2),(20-1)},{(14-2),(18-1),(16-2),(20-1)}},
			{{(4-2),(20-1),(6-2),(22-1)},{(6-2),(20-1),(8-2),(22-1)},{(8-2),(20-1),(10-2),(22-1)},{(10-2),(20-1),(12-2),(22-1)},{(12-2),(20-1),(14-2),(22-1)},{(14-2),(20-1),(16-2),(22-1)}},
			{{(4-2),(22-1),(6-2),(24-1)},{(6-2),(22-1),(8-2),(24-1)},{(8-2),(22-1),(10-2),(24-1)},{(10-2),(22-1),(12-2),(24-1)},{(12-2),(22-1),(14-2),(24-1)},{(14-2),(22-1),(16-2),(24-1)}},
			{{(4-2),(24-1),(6-2),(26-1)},{(6-2),(24-1),(8-2),(26-1)},{(8-2),(24-1),(10-2),(26-1)},{(10-2),(24-1),(12-2),(26-1)},{(12-2),(24-1),(14-2),(26-1)},{(14-2),(24-1),(16-2),(26-1)}},
			{{(4-2),(26-1),(6-2),(28-1)},{(6-2),(26-1),(8-2),(28-1)},{(8-2),(26-1),(10-2),(28-1)},{(10-2),(26-1),(12-2),(28-1)},{(12-2),(26-1),(14-2),(28-1)},{(14-2),(26-1),(16-2),(28-1)}},
			{{(4-2),(28-1),(6-2),(30-1)},{(6-2),(28-1),(8-2),(30-1)},{(8-2),(28-1),(10-2),(30-1)},{(10-2),(28-1),(12-2),(30-1)},{(12-2),(28-1),(14-2),(30-1)},{(14-2),(28-1),(16-2),(30-1)}},
			{{(4-2),(30-1),(6-2),(32-1)},{(6-2),(30-1),(8-2),(32-1)},{(8-2),(30-1),(10-2),(32-1)},{(10-2),(30-1),(12-2),(32-1)},{(12-2),(30-1),(14-2),(32-1)},{(14-2),(30-1),(16-2),(32-1)}},
			{{(4-2),(32-1),(6-2),(34-1)},{(6-2),(32-1),(8-2),(34-1)},{(8-2),(32-1),(10-2),(34-1)},{(10-2),(32-1),(12-2),(34-1)},{(12-2),(32-1),(14-2),(34-1)},{(14-2),(32-1),(16-2),(34-1)}},
			{{(4-2),(34-1),(6-2),(36-1)},{(6-2),(34-1),(8-2),(36-1)},{(8-2),(34-1),(10-2),(36-1)},{(10-2),(34-1),(12-2),(36-1)},{(12-2),(34-1),(14-2),(36-1)},{(14-2),(34-1),(16-2),(36-1)}},
			{{(4-2),(36-1),(6-2),(38-1)},{(6-2),(36-1),(8-2),(38-1)},{(8-2),(36-1),(10-2),(38-1)},{(10-2),(36-1),(12-2),(38-1)},{(12-2),(36-1),(14-2),(38-1)},{(14-2),(36-1),(16-2),(38-1)}},
			{{(4-2),(38-1),(6-2),(40-1)},{(6-2),(38-1),(8-2),(40-1)},{(8-2),(38-1),(10-2),(40-1)},{(10-2),(38-1),(12-2),(40-1)},{(12-2),(38-1),(14-2),(40-1)},{(14-2),(38-1),(16-2),(40-1)}},
			{{(4-2),(40-1),(6-2),(42-1)},{(6-2),(40-1),(8-2),(42-1)},{(8-2),(40-1),(10-2),(42-1)},{(10-2),(40-1),(12-2),(42-1)},{(12-2),(40-1),(14-2),(42-1)},{(14-2),(40-1),(16-2),(42-1)}},
			{{(4-2),(42-1),(6-2),(44-1)},{(6-2),(42-1),(8-2),(44-1)},{(8-2),(42-1),(10-2),(44-1)},{(10-2),(42-1),(12-2),(44-1)},{(12-2),(42-1),(14-2),(44-1)},{(14-2),(42-1),(16-2),(44-1)}},
			{{(4-2),(44-1),(6-2),(46-1)},{(6-2),(44-1),(8-2),(46-1)},{(8-2),(44-1),(10-2),(46-1)},{(10-2),(44-1),(12-2),(46-1)},{(12-2),(44-1),(14-2),(46-1)},{(14-2),(44-1),(16-2),(46-1)}},
			{{(4-2),(46-1),(6-2),(48-1)},{(6-2),(46-1),(8-2),(48-1)},{(8-2),(46-1),(10-2),(48-1)},{(10-2),(46-1),(12-2),(48-1)},{(12-2),(46-1),(14-2),(48-1)},{(14-2),(46-1),(16-2),(48-1)}},
			{{(4-2),(48-1),(6-2),(50-1)},{(6-2),(48-1),(8-2),(50-1)},{(8-2),(48-1),(10-2),(50-1)},{(10-2),(48-1),(12-2),(50-1)},{(12-2),(48-1),(14-2),(50-1)},{(14-2),(48-1),(16-2),(50-1)}},
			{{(4-2),(50-1),(6-2),(52-1)},{(6-2),(50-1),(8-2),(52-1)},{(8-2),(50-1),(10-2),(52-1)},{(10-2),(50-1),(12-2),(52-1)},{(12-2),(50-1),(14-2),(52-1)},{(14-2),(50-1),(16-2),(52-1)}},
			{{(4-2),(52-1),(6-2),(54-1)},{(6-2),(52-1),(8-2),(54-1)},{(8-2),(52-1),(10-2),(54-1)},{(10-2),(52-1),(12-2),(54-1)},{(12-2),(52-1),(14-2),(54-1)},{(14-2),(52-1),(16-2),(54-1)}},
			{{(4-2),(54-1),(6-2),(56-1)},{(6-2),(54-1),(8-2),(56-1)},{(8-2),(54-1),(10-2),(56-1)},{(10-2),(54-1),(12-2),(56-1)},{(12-2),(54-1),(14-2),(56-1)},{(14-2),(54-1),(16-2),(56-1)}},
		
			{{25-2,(16-1),27-2,(18-1)},{27-2,(16-1),29-2,(18-1)},{29-2,(16-1),31-2,(18-1)},{31-2,(16-1),33-2,(18-1)},{33-2,(16-1),35-2,(18-1)},{35-2,(16-1),37-2,(18-1)}},
			{{25-2,(18-1),27-2,(20-1)},{27-2,(18-1),29-2,(20-1)},{29-2,(18-1),31-2,(20-1)},{31-2,(18-1),33-2,(20-1)},{33-2,(18-1),35-2,(20-1)},{35-2,(18-1),37-2,(20-1)}},
			{{25-2,(20-1),27-2,(22-1)},{27-2,(20-1),29-2,(22-1)},{29-2,(20-1),31-2,(22-1)},{31-2,(20-1),33-2,(22-1)},{33-2,(20-1),35-2,(22-1)},{35-2,(20-1),37-2,(22-1)}},
			{{25-2,(22-1),27-2,(24-1)},{27-2,(22-1),29-2,(24-1)},{29-2,(22-1),31-2,(24-1)},{31-2,(22-1),33-2,(24-1)},{33-2,(22-1),35-2,(24-1)},{35-2,(22-1),37-2,(24-1)}},
			{{25-2,(24-1),27-2,(26-1)},{27-2,(24-1),29-2,(26-1)},{29-2,(24-1),31-2,(26-1)},{31-2,(24-1),33-2,(26-1)},{33-2,(24-1),35-2,(26-1)},{35-2,(24-1),37-2,(26-1)}},
			{{25-2,(26-1),27-2,(28-1)},{27-2,(26-1),29-2,(28-1)},{29-2,(26-1),31-2,(28-1)},{31-2,(26-1),33-2,(28-1)},{33-2,(26-1),35-2,(28-1)},{35-2,(26-1),37-2,(28-1)}},
			{{25-2,(28-1),27-2,(30-1)},{27-2,(28-1),29-2,(30-1)},{29-2,(28-1),31-2,(30-1)},{31-2,(28-1),33-2,(30-1)},{33-2,(28-1),35-2,(30-1)},{35-2,(28-1),37-2,(30-1)}},
			{{25-2,(30-1),27-2,(32-1)},{27-2,(30-1),29-2,(32-1)},{29-2,(30-1),31-2,(32-1)},{31-2,(30-1),33-2,(32-1)},{33-2,(30-1),35-2,(32-1)},{35-2,(30-1),37-2,(32-1)}},
			{{25-2,(32-1),27-2,(34-1)},{27-2,(32-1),29-2,(34-1)},{29-2,(32-1),31-2,(34-1)},{31-2,(32-1),33-2,(34-1)},{33-2,(32-1),35-2,(34-1)},{35-2,(32-1),37-2,(34-1)}},
			{{25-2,(34-1),27-2,(36-1)},{27-2,(34-1),29-2,(36-1)},{29-2,(34-1),31-2,(36-1)},{31-2,(34-1),33-2,(36-1)},{33-2,(34-1),35-2,(36-1)},{35-2,(34-1),37-2,(36-1)}},
			{{25-2,(36-1),27-2,(38-1)},{27-2,(36-1),29-2,(38-1)},{29-2,(36-1),31-2,(38-1)},{31-2,(36-1),33-2,(38-1)},{33-2,(36-1),35-2,(38-1)},{35-2,(36-1),37-2,(38-1)}},
			{{25-2,(38-1),27-2,(40-1)},{27-2,(38-1),29-2,(40-1)},{29-2,(38-1),31-2,(40-1)},{31-2,(38-1),33-2,(40-1)},{33-2,(38-1),35-2,(40-1)},{35-2,(38-1),37-2,(40-1)}},
			{{25-2,(40-1),27-2,(42-1)},{27-2,(40-1),29-2,(42-1)},{29-2,(40-1),31-2,(42-1)},{31-2,(40-1),33-2,(42-1)},{33-2,(40-1),35-2,(42-1)},{35-2,(40-1),37-2,(42-1)}},
			{{25-2,(42-1),27-2,(44-1)},{27-2,(42-1),29-2,(44-1)},{29-2,(42-1),31-2,(44-1)},{31-2,(42-1),33-2,(44-1)},{33-2,(42-1),35-2,(44-1)},{35-2,(42-1),37-2,(44-1)}},
			{{25-2,(44-1),27-2,(46-1)},{27-2,(44-1),29-2,(46-1)},{29-2,(44-1),31-2,(46-1)},{31-2,(44-1),33-2,(46-1)},{33-2,(44-1),35-2,(46-1)},{35-2,(44-1),37-2,(46-1)}},
			{{25-2,(46-1),27-2,(48-1)},{27-2,(46-1),29-2,(48-1)},{29-2,(46-1),31-2,(48-1)},{31-2,(46-1),33-2,(48-1)},{33-2,(46-1),35-2,(48-1)},{35-2,(46-1),37-2,(48-1)}},
			{{25-2,(48-1),27-2,(50-1)},{27-2,(48-1),29-2,(50-1)},{29-2,(48-1),31-2,(50-1)},{31-2,(48-1),33-2,(50-1)},{33-2,(48-1),35-2,(50-1)},{35-2,(48-1),37-2,(50-1)}},
			{{25-2,(50-1),27-2,(52-1)},{27-2,(50-1),29-2,(52-1)},{29-2,(50-1),31-2,(52-1)},{31-2,(50-1),33-2,(52-1)},{33-2,(50-1),35-2,(52-1)},{35-2,(50-1),37-2,(52-1)}},
			{{25-2,(52-1),27-2,(54-1)},{27-2,(52-1),29-2,(54-1)},{29-2,(52-1),31-2,(54-1)},{31-2,(52-1),33-2,(54-1)},{33-2,(52-1),35-2,(54-1)},{35-2,(52-1),37-2,(54-1)}},
			{{25-2,(54-1),27-2,(56-1)},{27-2,(54-1),29-2,(56-1)},{29-2,(54-1),31-2,(56-1)},{31-2,(54-1),33-2,(56-1)},{33-2,(54-1),35-2,(56-1)},{35-2,(54-1),37-2,(56-1)}}
	};
	public Config(){
		DR="/";
		ext=".xls";
		excelname = "results";
		x0 = firstmark	=0;
		y0 = secondmark	=1;
		x1 = thirdmark	=2;
		y1 = qrcode		=3;
		setAns();
	}
	public void setLog(String filename,FileHandler fh,Logger logger){
		try {
			fh=new FileHandler("log/log.txt",appendlog);
		} catch (IOException e) {
			e.printStackTrace();
		}
		fh.setFormatter(new SimpleFormatter());
		logger.addHandler(fh);
		logger.setLevel(Level.ALL);
	}

	public void setlayout(int unit,int origx,int origy){
		
		layout = new int[4][4];
		
		layout[firstmark][x0] = 0*unit+origx;
		layout[firstmark][y0] = 0*unit+origy;
		layout[firstmark][x1] = 8*unit+origx;
		layout[firstmark][y1] = 1*unit+origy;
		
		layout[secondmark][x0] = 0*unit+origx;
		layout[secondmark][y0] = 13*unit+origy;
		layout[secondmark][x1] = 8*unit+origx;
		layout[secondmark][y1] = 14*unit+origy;
		/*
		layout[thirdmark][x0] = 27*unit+origx;
		layout[thirdmark][y0] = 55*unit+origy;
		layout[thirdmark][x1] = 35*unit+origx;
		layout[thirdmark][y1] = 56*unit+origy;
		*/
		layout[thirdmark][x0] = 0*unit+origx;
		layout[thirdmark][y0] = 13*unit+origy;
		layout[thirdmark][x1] = 8*unit+origx;
		layout[thirdmark][y1] = 14*unit+origy;
	}
	public void setAns(){
		A=q1=0;
		B=q2=1;
		C=q3=2;
		D=q4=3;
		E=q5=4;
		F=q6=5;
		q7=6;
		q8=7;
		q9=8;
		q10=9;
		q11=10;
		q12=11;
		q13=12;
		q14=13;
		q15=14;
		q16=15;
		q17=16;
		q18=17;
		q19=18;
		q20=19;
		/*ans = new int[20][24][4];
		ans[q1][A][x0]=4; //+u/2
		ans[q1][A][y0]=16;
		ans[q1][A][x1]=6;
		ans[q1][A][y1]=18;//-u/2
		
		ans[q1][B][x0]=6; //+u/2
		ans[q1][B][y0]=16;
		ans[q1][B][x1]=8;
		ans[q1][B][y1]=19;//-u/2

		ans[q1][C][x0]=8; //+u/2
		ans[q1][C][y0]=16;
		ans[q1][C][x1]=10;
		ans[q1][C][y1]=20;//-u/2

		ans[q1][D][x0]=10; //+u/2
		ans[q1][D][y0]=16;
		ans[q1][D][x1]=12;
		ans[q1][D][y1]=21;//-u/2

		ans[q1][E][x0]=12; //+u/2
		ans[q1][E][y0]=16;
		ans[q1][E][x1]=14;
		ans[q1][E][y1]=22;//-u/2

		ans[q1][F][x0]=14; //+u/2
		ans[q1][F][y0]=16;
		ans[q1][F][x1]=16;
		ans[q1][F][y1]=23;//-u/2
		*/
	}
	/*
	public void showQBlueprint(int nu,int unit){
		System.out.println("Q"+(nu+1)+":A option start ("+(ans[nu][A][x0]+1/2)*unit+","+(ans[q][A][y0]*twounit)+") end ("+(ans[q][A][x1]*twounit)+","+(ans[q][A][y1]*twounit-unit)+")");
		System.out.println("Q"+(nu+1)+":B option start ("+(ans[q][B][x0]*twounit+unit)+","+(ans[q][B][y0]*twounit)+") end ("+(ans[q][B][x1]*twounit)+","+(ans[q][B][y1]*twounit-unit)+")");
		System.out.println("Q"+(nu+1)+":C option start ("+(ans[q][C][x0]*twounit+unit)+","+(ans[q][C][y0]*twounit)+") end ("+(ans[q][C][x1]*twounit)+","+(ans[q][C][y1]*twounit-unit)+")");
		System.out.println("Q"+(nu+1)+":D option start ("+(ans[q][D][x0]*twounit+unit)+","+(ans[q][D][y0]*twounit)+") end ("+(ans[q][D][x1]*twounit)+","+(ans[q][D][y1]*twounit-unit)+")");
		System.out.println("Q"+(nu+1)+":E option start ("+(ans[q][E][x0]*twounit+unit)+","+(ans[q][E][y0]*twounit)+") end ("+(ans[q][E][x1]*twounit)+","+(ans[q][E][y1]*twounit-unit)+")");
		System.out.println("Q"+(nu+1)+":F option start ("+(ans[q][F][x0]*twounit+unit)+","+(ans[q][F][y0]*twounit)+") end ("+(ans[q][F][x1]*twounit)+","+(ans[q][F][y1]*twounit-unit)+")");
	}
	*/
}
