package config;

import java.io.IOException;
import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;

public class Config {
	public 	String DR,ext;
	public double thresh= 169;
	public boolean 	Debug = true,
					extra = true,
					appendlog = false;
	public int[][] layout;
	//public int[][][] ans;
	public int firstmark,
		secondmark,
		thirdmark,
		qrcode,
		x0,y0,x1,y1,q1,q2,q3,q4,q5,q6,q7,q8,q9,q10,
		q11,q12,q13,q14,q15,q16,q17,q18,q19,q20,
		A,B,C,D,E,F;
	public int[][][] ans = {
		{{4,16,6,18},{6,16,8,18},{8,16,10,18},{10,16,12,18},{12,16,14,18},{14,16,16,18}},
		{{4,18,6,20},{6,18,8,20},{8,18,10,20},{10,18,12,20},{12,18,14,20},{14,18,16,20}},
		{{4,20,6,22},{6,20,8,22},{8,20,10,22},{10,20,12,22},{12,20,14,22},{14,20,16,22}},
		{{4,22,6,24},{6,22,8,24},{8,22,10,24},{10,22,12,24},{12,22,14,24},{14,22,16,24}},
		{{4,24,6,26},{6,24,8,26},{8,24,10,26},{10,24,12,26},{12,24,14,26},{14,24,16,26}},
		{{4,26,6,28},{6,26,8,28},{8,26,10,28},{10,26,12,28},{12,26,14,28},{14,26,16,28}},
		{{4,28,6,30},{6,28,8,30},{8,28,10,30},{10,28,12,30},{12,28,14,30},{14,28,16,30}},
		{{4,30,6,32},{6,30,8,32},{8,30,10,32},{10,30,12,32},{12,30,14,32},{14,30,16,32}},
		{{4,32,6,34},{6,32,8,34},{8,32,10,34},{10,32,12,34},{12,32,14,34},{14,32,16,34}},
		{{4,34,6,36},{6,34,8,36},{8,34,10,36},{10,34,12,36},{12,34,14,36},{14,34,16,36}},
		{{4,36,6,38},{6,36,8,38},{8,36,10,38},{10,36,12,38},{12,36,14,38},{14,36,16,38}},
		{{4,38,6,40},{6,38,8,40},{8,38,10,40},{10,38,12,40},{12,38,14,40},{14,38,16,40}},
		{{4,40,6,42},{6,40,8,42},{8,40,10,42},{10,40,12,42},{12,40,14,42},{14,40,16,42}},
		{{4,42,6,44},{6,42,8,44},{8,42,10,44},{10,42,12,44},{12,42,14,44},{14,42,16,44}},
		{{4,44,6,46},{6,44,8,46},{8,44,10,46},{10,44,12,46},{12,44,14,46},{14,44,16,46}},
		{{4,46,6,48},{6,46,8,48},{8,46,10,48},{10,46,12,48},{12,46,14,48},{14,46,16,48}},
		{{4,48,6,50},{6,48,8,50},{8,48,10,50},{10,48,12,50},{12,48,14,50},{14,48,16,50}},
		{{4,50,6,52},{6,50,8,52},{8,50,10,52},{10,50,12,52},{12,50,14,52},{14,50,16,52}},
		{{4,52,6,54},{6,52,8,54},{8,52,10,54},{10,52,12,54},{12,52,14,54},{14,52,16,54}},
		
		{{25,16,27,18},{27,16,29,18},{29,16,31,18},{31,16,34,18},{34,16,36,18},{36,16,38,18}},
		{{25,18,27,20},{27,18,29,20},{29,18,31,20},{31,18,34,20},{34,18,36,20},{36,18,38,20}},
		{{25,20,27,22},{27,20,29,22},{29,20,31,22},{31,20,34,22},{34,20,36,22},{36,20,38,22}},
		{{25,22,27,24},{27,22,29,24},{29,22,31,24},{31,22,34,24},{34,22,36,24},{36,22,38,24}},
		{{25,24,27,26},{27,24,29,26},{29,24,31,26},{31,24,34,26},{34,24,36,26},{36,24,38,26}},
		{{25,26,27,28},{27,26,29,28},{29,26,31,28},{31,26,34,28},{34,26,36,28},{36,26,38,28}},
		{{25,28,27,30},{27,28,29,30},{29,28,31,30},{31,28,34,30},{34,28,36,30},{36,28,38,30}},
		{{25,30,27,32},{27,30,29,32},{29,30,31,32},{31,30,34,32},{34,30,36,32},{36,30,38,32}},
		{{25,32,27,34},{27,32,29,34},{29,32,31,34},{31,32,34,34},{34,32,36,34},{36,32,38,34}},
		{{25,34,27,36},{27,34,29,36},{29,34,31,36},{31,34,34,36},{34,34,36,36},{36,34,38,36}},
		{{25,36,27,38},{27,36,29,38},{29,36,31,38},{31,36,34,38},{34,36,36,38},{36,36,38,38}},
		{{25,38,27,40},{27,38,29,40},{29,38,31,40},{31,38,34,40},{34,38,36,40},{36,38,38,40}},
		{{25,40,27,42},{27,40,29,42},{29,40,31,42},{31,40,34,42},{34,40,36,42},{36,40,38,42}},
		{{25,42,27,44},{27,42,29,44},{29,42,31,44},{31,42,34,44},{34,42,36,44},{36,42,38,44}},
		{{25,44,27,46},{27,44,29,46},{29,44,31,46},{31,44,34,46},{34,44,36,46},{36,44,38,46}},
		{{25,46,27,48},{27,46,29,48},{29,46,31,48},{31,46,34,48},{34,46,36,48},{36,46,38,48}},
		{{25,48,27,50},{27,48,29,50},{29,48,31,50},{31,48,34,50},{34,48,36,50},{36,48,38,50}},
		{{25,50,27,52},{27,50,29,52},{29,50,31,52},{31,50,34,52},{34,50,36,52},{36,50,38,52}},
		{{25,52,27,54},{27,52,29,54},{29,52,31,54},{31,52,34,54},{34,52,36,54},{36,52,38,54}},
		{{25,54,27,56},{27,54,29,56},{29,54,31,56},{31,54,34,56},{34,54,36,56},{36,54,38,56}}
	};
	public Config(){
		DR="/";
		ext=".xls";
		setlayout();
		setAns();
	}
	public void setLog(String filename,FileHandler fh,Logger logger){
		try {
			fh=new FileHandler("log/"+filename+".log",appendlog);
		} catch (IOException e) {
			e.printStackTrace();
		}
		fh.setFormatter(new SimpleFormatter());
		logger.addHandler(fh);
		logger.setLevel(Level.ALL);
	}
	public void setlayout(){
		x0 = firstmark	=0;
		y0 = secondmark	=1;
		x1 = thirdmark	=2;
		y1 = qrcode		=3;
		layout = new int[4][4];
		
		layout[firstmark][x0] = 2;
		layout[firstmark][y0] = 1;
		layout[firstmark][x1] = 10;
		layout[firstmark][y1] = 2;
		
		layout[secondmark][x0] = 2;
		layout[secondmark][y0] = 14;
		layout[secondmark][x1] = 10;
		layout[secondmark][y1] = 15;
		
		layout[thirdmark][x0] = 29;
		layout[thirdmark][y0] = 56;
		layout[thirdmark][x1] = 37;
		layout[thirdmark][y1] = 57;
	}
	public void setAns(){
		A=q1=0;
		B=q2=1;
		C=q3=2;
		D=q4=3;
		E=q5=4;
		F=q6=5;
		q7=6;
		q8=7;
		q9=8;
		q10=9;
		q11=10;
		q12=11;
		q13=12;
		q14=13;
		q15=14;
		q16=15;
		q17=16;
		q18=17;
		q19=18;
		q20=19;
		/*ans = new int[20][24][4];
		ans[q1][A][x0]=4; //+u/2
		ans[q1][A][y0]=16;
		ans[q1][A][x1]=6;
		ans[q1][A][y1]=18;//-u/2
		
		ans[q1][B][x0]=6; //+u/2
		ans[q1][B][y0]=16;
		ans[q1][B][x1]=8;
		ans[q1][B][y1]=19;//-u/2

		ans[q1][C][x0]=8; //+u/2
		ans[q1][C][y0]=16;
		ans[q1][C][x1]=10;
		ans[q1][C][y1]=20;//-u/2

		ans[q1][D][x0]=10; //+u/2
		ans[q1][D][y0]=16;
		ans[q1][D][x1]=12;
		ans[q1][D][y1]=21;//-u/2

		ans[q1][E][x0]=12; //+u/2
		ans[q1][E][y0]=16;
		ans[q1][E][x1]=14;
		ans[q1][E][y1]=22;//-u/2

		ans[q1][F][x0]=14; //+u/2
		ans[q1][F][y0]=16;
		ans[q1][F][x1]=16;
		ans[q1][F][y1]=23;//-u/2
		*/
	}
	public void showQBlueprint(int q,int twounit,int unit){
		System.out.println("Q"+(q+1)+":A option start ("+(ans[q][A][x0]*twounit+unit)+","+(ans[q][A][y0]*twounit)+") end ("+(ans[q][A][x1]*twounit)+","+(ans[q][A][y1]*twounit-unit)+")");
		System.out.println("Q"+(q+1)+":B option start ("+(ans[q][B][x0]*twounit+unit)+","+(ans[q][B][y0]*twounit)+") end ("+(ans[q][B][x1]*twounit)+","+(ans[q][B][y1]*twounit-unit)+")");
		System.out.println("Q"+(q+1)+":C option start ("+(ans[q][C][x0]*twounit+unit)+","+(ans[q][C][y0]*twounit)+") end ("+(ans[q][C][x1]*twounit)+","+(ans[q][C][y1]*twounit-unit)+")");
		System.out.println("Q"+(q+1)+":D option start ("+(ans[q][D][x0]*twounit+unit)+","+(ans[q][D][y0]*twounit)+") end ("+(ans[q][D][x1]*twounit)+","+(ans[q][D][y1]*twounit-unit)+")");
		System.out.println("Q"+(q+1)+":E option start ("+(ans[q][E][x0]*twounit+unit)+","+(ans[q][E][y0]*twounit)+") end ("+(ans[q][E][x1]*twounit)+","+(ans[q][E][y1]*twounit-unit)+")");
		System.out.println("Q"+(q+1)+":F option start ("+(ans[q][F][x0]*twounit+unit)+","+(ans[q][F][y0]*twounit)+") end ("+(ans[q][F][x1]*twounit)+","+(ans[q][F][y1]*twounit-unit)+")");
	}
}
